import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
import nltk
from nltk.corpus import stopwords

nltk.download('stopwords')

def load_and_preprocess_data():
    # Replace with the path to your Kaggle CSV file
    df = pd.read_csv('path_to_your_dataset.csv')

    # Example: Assuming the dataset has a 'text' column for the reviews and a 'label' column for sentiment
    # Preprocessing the data (e.g., removing NaN values)
    df = df.dropna(subset=['text', 'label'])

    # Assuming 'label' column has sentiment: 0 for negative and 1 for positive
    reviews = df['text']
    labels = df['label']

    return reviews, labels

def train_model():
    reviews, labels = load_and_preprocess_data()

    # Split the dataset into training and testing data
    X_train, X_test, y_train, y_test = train_test_split(reviews, labels, test_size=0.2, random_state=42)

    # Create a pipeline with CountVectorizer and Naive Bayes
    model = make_pipeline(CountVectorizer(stop_words=stopwords.words('english')), MultinomialNB())
    model.fit(X_train, y_train)

    print(f"Model Accuracy: {model.score(X_test, y_test):.2f}")

    return model
